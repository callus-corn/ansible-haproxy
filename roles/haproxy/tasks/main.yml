---

- name: make cert dir
  file:
    path: "{{ haproxy_cert_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: put cert
  copy:
    src: "{{ ansible_cert_src_dir }}/{{ target.fqdn }}/{{ target.fqdn }}.crt"
    dest: "{{ haproxy_cert_dir }}/{{ target.fqdn }}.crt"
    owner: root
    group: root
    mode: 0400

- name: put ica cert
  copy:
    src: "{{ ansible_ica_dir }}/{{ ansible_ica_crt_file }}"
    dest: "{{ haproxy_cert_dir }}/{{ ansible_ica_crt_file }}"
    owner: root
    group: root
    mode: 0400

- name: put key
  copy:
    src: "{{ ansible_cert_src_dir }}/{{ target.fqdn }}/{{ target.fqdn }}.key"
    dest: "{{ haproxy_cert_dir }}/{{ target.fqdn }}.key"
    owner: root
    group: root
    mode: 0400

- name: generate pem
  shell: >-
    cat 
    {{ haproxy_cert_dir }}/{{ target.fqdn }}.crt
    {{ haproxy_cert_dir }}/{{ ansible_ica_crt_file }}
    {{ haproxy_cert_dir }}/{{ target.fqdn }}.key
    > {{ haproxy_cert_dir }}/{{ target.fqdn }}.pem

- name: set pem permission
  file:
    path: "{{ haproxy_cert_dir }}/{{ target.fqdn }}.pem"
    owner: root
    group: root
    mode: 0400

- name: install haproxy
  dnf:
    name: haproxy
    state: latest

- name: put config
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: 0644
  notify: restart_haproxy

- name: 80 port open
  firewalld:
    zone: public
    port: 80/tcp
    permanent: yes
    immediate: yes
    state: enabled

- name: 443 port open
  firewalld:
    zone: public
    port: 443/tcp
    permanent: yes
    immediate: yes
    state: enabled

- name: disable SELinux
  selinux:
    state: disabled

- name: force restart
  debug:
    msg: "force restart"
  when:
    - haproxy_force_restart is defined
    - haproxy_force_restart
  changed_when: true
  notify: restart_haproxy
